# Generated by Django 3.2.3 on 2023-07-15 10:03

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('recepts', '0002_auto_20230714_1236'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название тэга')),
                ('color', models.CharField(max_length=7, unique=True, verbose_name='Цвет')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='Уникальный идентификатор тэга')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
            },
        ),
        migrations.AlterModelOptions(
            name='recept',
            options={'verbose_name': 'рецепт', 'verbose_name_plural': 'рецепты'},
        ),
        migrations.CreateModel(
            name='ShoppingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recept_shopper', to='recepts.recept', verbose_name='Рецепт')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_shopper', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': ('Список покупок',),
                'verbose_name_plural': ('Списки покупок',),
            },
        ),
        migrations.CreateModel(
            name='IngridientAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, message='количество должно быть положительным числом')], verbose_name='Количество')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recepts.ingredients', verbose_name='Ингридиент')),
                ('recept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recepts.recept', verbose_name='Рецепт')),
            ],
            options={
                'verbose_name': ('Ингридиент в рецепте',),
                'verbose_name_plural': ('Ингридиенты в рецепте',),
            },
        ),
        migrations.CreateModel(
            name='Favourites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourits', to='recepts.recept', verbose_name='Рецепт')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourite', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': ('Избранное',),
            },
        ),
        migrations.AddField(
            model_name='recept',
            name='ingredients',
            field=models.ManyToManyField(help_text='Выберите ингридиенты для рецепта', related_name='recepts', through='recepts.IngridientAmount', to='recepts.Ingredients', verbose_name='Ингридиенты'),
        ),
        migrations.AddField(
            model_name='recept',
            name='tag',
            field=models.ManyToManyField(to='recepts.Tag', verbose_name='Тэг'),
        ),
        migrations.AddConstraint(
            model_name='shoppinglist',
            constraint=models.UniqueConstraint(fields=('user', 'recept'), name='unique_shopping_list'),
        ),
        migrations.AddConstraint(
            model_name='ingridientamount',
            constraint=models.UniqueConstraint(fields=('ingredient', 'recept'), name='ingredient_in_recept'),
        ),
        migrations.AddConstraint(
            model_name='favourites',
            constraint=models.UniqueConstraint(fields=('user', 'recept'), name='unique_favourite'),
        ),
    ]
